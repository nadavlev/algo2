//@version=5
strategy(title="Demo GPT - Moving Average Simple", shorttitle="SMA", overlay=true, default_qty_type=strategy.percent_of_equity, default_qty_value=100, commission_type=strategy.commission.percent, commission_value=0.1, slippage=3)

// Start Date and End Date inputs
startDate = input(timestamp("01 Jan 2018 00:00 +0000"), "Start Date")
endDate   = input(timestamp("31 Dec 2020 23:59 +0000"), "End Date")
inDateRange = time >= startDate and time <= endDate

// Inputs
len    = input.int(150, minval=1, title="Length")
src    = input(close, title="Source")
offset = input.int(title="Offset", defval=0, minval=-500, maxval=500, display=display.data_window)
out    = ta.sma(src, len)
plot(out, color=color.blue, title="MA", offset=offset)

// Smoothing MA inputs
GRP           = "Moving Average"
TT_BB         = "Only applies when 'SMA + Bollinger Bands' is selected. Determines the distance between the SMA and the bands."
maTypeInput   = input.string("None", "Type", options=["None", "SMA", "SMA + Bollinger Bands", "EMA", "SMMA (RMA)", "WMA", "VWMA"], group=GRP, display=display.data_window)
maLengthInput = input.int(14, "Length", group=GRP, display=display.data_window)
bbMultInput   = input.float(2.0, "BB StdDev", minval=0.001, maxval=50, step=0.5, tooltip=TT_BB, group=GRP, display=display.data_window)
enableMA      = maTypeInput != "None"
isBB          = maTypeInput == "SMA + Bollinger Bands"

// Smoothing MA Calculation
ma(source, length, MAtype) =>
    switch MAtype
        "SMA"                   => ta.sma(source, length)
        "SMA + Bollinger Bands" => ta.sma(source, length)
        "EMA"                   => ta.ema(source, length)
        "SMMA (RMA)"            => ta.rma(source, length)
        "WMA"                   => ta.wma(source, length)
        "VWMA"                  => ta.vwma(source, length)
        => na

// Smoothing MA plots
smoothingMA    = enableMA ? ma(out, maLengthInput, maTypeInput) : na
smoothingStDev = isBB ? ta.stdev(out, maLengthInput) * bbMultInput : na
plot(smoothingMA, "SMA-based MA", color=color.yellow, display=enableMA ? display.all : display.none)
bbUpperBand = plot(smoothingMA + smoothingStDev, title="Upper Bollinger Band", color=color.green, display=isBB ? display.all : display.none)
bbLowerBand = plot(smoothingMA - smoothingStDev, title="Lower Bollinger Band", color=color.green, display=isBB ? display.all : display.none)
fill(bbUpperBand, bbLowerBand, color=isBB ? color.new(color.green, 90) : na, title="Bollinger Bands Background Fill", display=isBB ? display.all : display.none)

// Trading logic
longCondition = inDateRange and ta.crossover(close, out)
exitCondition = inDateRange and ta.crossunder(close, out)

if longCondition
    strategy.entry("Long", strategy.long)

if exitCondition
    strategy.close("Long")
